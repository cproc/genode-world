source ${genode_dir}/repos/world/run/qt5_common_tmp.inc

#import_from_depot [depot_user]/src/qt5_minimal_browser \
#                  [depot_user]/src/qt5_base \
#                  [depot_user]/src/qt5_component \
#                  [depot_user]/src/qt5_declarative \
#                  [depot_user]/src/qt5_quickcontrols \
#                  [depot_user]/src/qt5_webengine \
#                  [depot_user]/src/vfs_jitterentropy \
#                  [depot_user]/src/vfs_lwip \
#                  [depot_user]/src/vfs_qtwebengine_shm

import_from_depot [depot_user]/src/qt5_base \
                  [depot_user]/src/qt5_component \
                  [depot_user]/src/vfs_jitterentropy \
                  [depot_user]/src/vfs_lwip

#
# Build
#

append build_components [qt5_build_components]

append build_components {
	app/falkon
	lib/ld
	lib/vfs/lwip
	lib/vfs/jitterentropy
	lib/vfs/pipe
	lib/vfs/qtwebengine_shm
	server/vfs
	app/top
}

build $build_components

#
# Generate config
#

append config {
<config>
	<parent-provides>}
append config [qt5_parent_provides]
append config {
	</parent-provides>
	<default caps="100"/>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>}

append config [qt5_start_nodes]

append config {

<!--
	<start name="vfs" caps="250">
		<resource name="RAM" quantum="256M"/>
		<provides> <service name="File_system"/> </provides>
		<config>
			<vfs>
				<lwip ip_addr="10.0.10.2" netmask="255.255.255.0" gateway="10.0.10.1" nameserver="10.0.0.2"/>
			</vfs>
			<default-policy writeable="yes" root="/"/>
		</config>
	</start>
-->

	<start name="top">
		<resource name="RAM" quantum="2M"/>
		<config period_ms="2000"/>
	</start>

	<start name="falkon" caps="10000">
		<resource name="RAM" quantum="2G"/>
		<config ld_verbose="yes">
			<vfs>
				<dir name="dev">
					<dir name="pipe"> <pipe/> </dir>
					<log/>
					<jitterentropy name="random"/>
					<jitterentropy name="urandom"/>
					<inline name="rtc">2018-01-01 00:01</inline> 
				</dir>
				<dir name="shm"> <qtwebengine_shm/> </dir>
				<dir name="socket">
					<lwip ip_addr="10.0.10.2" netmask="255.255.255.0" gateway="10.0.10.1" nameserver="10.0.0.2"/>
					<!--<fs/>-->
				</dir>
				<dir name="tmp"> <ram/> </dir>
				<tar name="qt5_dejavusans.tar"/>
				<tar name="qt5_declarative_qml.tar"/>
				<tar name="qt5_libqgenode.tar"/>
				<tar name="qt5_libqsqlite.tar"/>
				<tar name="qt5_libqsvg.tar"/>
				<tar name="qt5_webengine_qml.tar"/>
				<tar name="qt5_webengine_resources.tar"/>
				<tar name="falkon_theme.tar"/>
				<ram/>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log" pipe="/dev/pipe" rtc="/dev/rtc" socket="/socket" pid="1">
				<!--<pthread placement="single-cpu"/>-->
			</libc>
			<arg value="falkon"/>
			<arg value="--single-process"/>
			<arg value="--no-sandbox"/>
			<arg value="--disable-gpu"/>
			<arg value="--enable-logging"/>
			<arg value="--log-level=3"/>
			<arg value="--v=0"/>
		</config>
		<route>
			<service name="Gui"> <child name="wm"/> </service>
			<service name="Report" label="shape">
				<child name="pointer" label="wm -> falkon -> shape"/>
			</service>
			<service name="ROM" label="egl_drv.lib.so"> <parent label="egl_swrast.lib.so" /> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>
</config>}

install_config $config

#
# Boot modules
#

append boot_modules [qt5_boot_modules]

append boot_modules {
	egl.lib.so
	expat.lib.so
	falkon
	falkon_theme.tar
	glapi.lib.so
	ld.lib.so
	libFalkon.lib.so
	libQt5Core.lib.so
	libQt5Gui.lib.so
	libQt5Network.lib.so
	libQt5Qml.lib.so
	libQt5Quick.lib.so
	libQt5QuickWidgets.lib.so
	libQt5Svg.lib.so
	libQt5WebChannel.lib.so
	libQt5WebEngine.lib.so
	libQt5WebEngineCore.lib.so
	libQt5WebEngineWidgets.lib.so
	libQt5Widgets.lib.so
	libc.lib.so
	libcrypto.lib.so
	libm.lib.so
	libqgenode.lib.so
	libqjpeg.lib.so
	libqsqlite.lib.so
	libqsvg.lib.so
	libqtquick2plugin.lib.so
	libqtwebengineplugin.lib.so
	libwindowplugin.lib.so
	mesa.lib.so
	qt5_component.lib.so
	qt5_declarative_qml.tar
	qt5_libqgenode.tar
	qt5_libqsqlite.tar
	qt5_libqsvg.tar
	qt5_webengine_qml.tar
	qt5_webengine_resources.tar
	stdcxx.lib.so
	vfs
	vfs.lib.so
	vfs_jitterentropy.lib.so
	vfs_lwip.lib.so
	vfs_pipe.lib.so
	vfs_qtwebengine_shm.lib.so
	top
}

build_boot_image $boot_modules


proc qemu_nic_model {} {
	if [have_spec x86]         { return e1000 }
	if [have_spec lan9118]     { return lan9118 }
	if [have_spec cadence_gem] { return cadence_gem }
	return nic_model_missing
}

append qemu_args " -netdev user,id=net0 "
append qemu_args " -net nic,model=[qemu_nic_model],netdev=net0 "

run_genode_until forever

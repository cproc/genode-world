append build_components {
	drivers/nic
	drivers/audio
	app/freeciv-sdl
}

source ${genode_dir}/repos/base/run/platform_drv.inc

append app_config {
	<start name="nic_drv">
		<binary name="} [nic_drv_binary] {"/>
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Nic"/></provides>
		<config>
			<nic tap="tap0"/>
		</config>
	</start>
	<start name="audio_drv">
		<binary name="} [audio_drv_binary] {"/>
		<resource name="RAM" quantum="8M"/>
		<provides> <service name="Audio_out"/> </provides>
		<config/>
	</start>
	<start name="freeciv-sdl" caps="300">
		<resource name="RAM" quantum="128M"/>
		<config ld_verbose="yes">
			<vfs>
				<tar name="freeciv_data.tar"/>
				<dir name="dev"> <log/> </dir>
				<dir name="socket">
					<!--<lxip dhcp="yes"/>-->
					<lxip ip_addr="10.0.2.53" netmask="255.255.255.0" gateway="0.0.0.0" nameserver="0.0.0.0"/>
				</dir>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log" socket="/socket"/>
			<arg value="freeciv-sdl"/>
			<arg value="-d"/>
			<arg value="3"/>
		</config>
	</start>}

append boot_modules {
	freeciv-sdl
	curl.lib.so
	freetype.lib.so
	jpeg.lib.so
	libc.lib.so
	libc_resolv.lib.so
	libcrypto.lib.so
	libiconv.lib.so
	libm.lib.so
	libpng.lib.so
	libssh.lib.so
	libssl.lib.so
	lxip.lib.so
	posix.lib.so
	pthread.lib.so
	sdl.lib.so
	sdl_gfx.lib.so
	sdl_image.lib.so
	sdl_mixer.lib.so
	sdl_ttf.lib.so
	vfs_lxip.lib.so
	zlib.lib.so
	freeciv_data.tar
} [nic_drv_binary] {
} [audio_drv_binary]

#append qemu_args " -net nic,model=e1000 -net user -soundhw es1370"
append qemu_args " -net nic,model=e1000 -net tap,ifname=tap0,downscript=no,script=no -soundhw es1370 "

source ${genode_dir}/repos/world/run/framebuffer_app.inc

#
# Build
#

set build_components {
	core init
	drivers/timer
	drivers/nic
	app/freeciv-server 
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

#
# Generate config
#

set config {

<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default caps="100"/>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>}

append_platform_drv_config

append config {
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
	<start name="nic_drv">
		<binary name="} [nic_drv_binary] {"/>
		<resource name="RAM" quantum="8M"/>
		<provides><service name="Nic"/></provides>
		<config>
			<nic tap="tap0"/>
		</config>
	</start>
	<start name="freeciv-server" caps="200">
		<resource name="RAM" quantum="128M"/>
		<config ld_verbose="yes">
			<vfs>
				<tar name="freeciv_data.tar"/>
				<dir name="dev"> <log/> <null/> </dir>
				<dir name="socket">
					<lxip ip_addr="10.0.2.52" netmask="255.255.255.0" gateway="0.0.0.0" nameserver="0.0.0.0"/>
				</dir>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log" stdin="/dev/null" socket="/socket"/>
			<arg value="freeciv-server"/>
			<!--<arg value="-b"/>
			<arg value="10.0.2.52"/>-->
			<arg value="-d"/>
			<arg value="3"/>
		</config>
	</start>
</config>
}

install_config $config

#
# Boot modules
#

append boot_modules {
	core
	init
	timer
	freeciv-server
	freeciv_data.tar
	curl.lib.so
	ld.lib.so
	libc.lib.so
	libc_resolv.lib.so
	libcrypto.lib.so
	libiconv.lib.so
	libm.lib.so
	libssh.lib.so
	libssl.lib.so
	lxip.lib.so
	posix.lib.so
	pthread.lib.so
	vfs_lxip.lib.so
	zlib.lib.so
} [nic_drv_binary]

append_platform_drv_boot_modules

build_boot_image $boot_modules

append qemu_args " -m 256 -nographic -net nic,model=e1000 -net tap,ifname=tap0,downscript=no,script=no "

run_genode_until forever
